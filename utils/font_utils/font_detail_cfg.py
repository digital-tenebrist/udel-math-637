#!/usr/bin/env python

from collections import namedtuple

class FontDetailConfig():

    def __init__(self):
        self.nt = namedtuple('FontDetailNamedTuple',
                             [
                                 'font_name',
                                 'font_variant',
                                 'italic'
                             ]
        )
        self.list_of_details = [
            self.nt('AGENCY', 'AGENCY FB', 0),
            self.nt('ARIAL', 'scanned', 0),
            self.nt('ARIAL', 'ARIAL', 0),
            self.nt('ARIAL', 'ARIAL BLACK', 0),
            self.nt('BANKGOTHIC', 'BANKGOTHIC MD BT', 0),
            self.nt('BANKGOTHIC', 'BANKGOTHIC LT BT', 0),
            self.nt('BASKERVILLE', 'BASKERVILLE OLD FACE', 0),
            self.nt('BAUHAUS','BAUHAUS 93',0),
            self.nt('BELL', 'BELL MT', 0),
            self.nt('BERLIN','BERLIN SANS FB',0),
            self.nt('BERLIN','BERLIN SANS FB DEMI',0),
            self.nt('BERNARD', 'BERNARD MT CONDENSED', 0),
            self.nt('BITSTREAMVERA','scanned',0),
            self.nt('BODONI', 'BODONI MT', 0),
            self.nt('BODONI', 'BODONI MT BLACK', 0),
            self.nt('BOOKMAN', 'BOOKMAN OLD STYLE', 0),
            self.nt('BRITANNIC','BRITANNIC BOLD',0),
            self.nt('BROADWAY','BROADWAY',0),
            self.nt('CALIBRI', 'CALIBRI', 0),
            self.nt('CALIBRI', 'CALIBRI LIGHT', 0),
            self.nt('CALIFORNIAN', 'CALIFORNIAN FB', 0),
            self.nt('CALISTO', 'CALISTO MT', 0),
            self.nt('CAMBRIA', 'CAMBRIA', 0),
            self.nt('CANDARA','CANDARA',0),
            self.nt('CENTAUR', 'CENTAUR', 0),
            self.nt('CENTURY', 'CENTURY SCHOOLBOOK', 0),
            self.nt('CONSOLAS', 'CONSOLAS', 0),
            self.nt('CONSTANTIA', 'CONSTANTIA', 0),
            self.nt('COOPER', 'COOPER BLACK', 0),
            self.nt('COPPERPLATE','COPPERPLATE GOTHIC LIGHT',0),
            self.nt('COPPERPLATE','COPPERPLATE GOTHIC BOLD',0),
            self.nt('CORBEL','CORBEL',0),
            self.nt('COURIER', 'COURIER NEW', 0),
            self.nt('COURIER', 'scanned', 0),
            self.nt('DUTCH801', 'DUTCH801 XBD BT', 0),
            self.nt('DUTCH801', 'DUTCH801 RM BT', 0),
            self.nt('EBRIMA','EBRIMA',0),
            self.nt('ELEPHANT', 'ELEPHANT', 0),
            self.nt('ERAS','ERAS LIGHT ITC',0),
            self.nt('ERAS','ERAS DEMI ITC',0),
            self.nt('ERAS','ERAS BOLD ITC',0),
            self.nt('ERAS','ERAS MEDIUM ITC',0),
            self.nt('EUROROMAN', 'EUROROMAN', 0),
            self.nt('FELIX TITLING', 'FELIX TITLING', 0),
            self.nt('ENGRAVERS', 'ENGRAVERS MT', 0),
            self.nt('FOOTLIGHT', 'FOOTLIGHT MT LIGHT', 0),
            self.nt('FRANKLIN','FRANKLIN GOTHIC DEMI',0),
            self.nt('FRANKLIN','FRANKLIN GOTHIC BOOK',0),
            self.nt('FRANKLIN','FRANKLIN GOTHIC DEMI COND',0),
            self.nt('FRANKLIN','FRANKLIN GOTHIC MEDIUM COND',0),
            self.nt('FRANKLIN','FRANKLIN GOTHIC HEAVY',0),
            self.nt('FRANKLIN','FRANKLIN GOTHIC MEDIUM',0),
            self.nt('GADUGI','GADUGI',0),
            self.nt('GARAMOND', 'GARAMOND', 0),
            self.nt('GEORGIA', 'GEORGIA', 0),
            self.nt('GILL','GILL SANS MT EXT CONDENSED BOLD',0),
            self.nt('GILL','GILL SANS ULTRA BOLD',0),
            self.nt('GILL','GILL SANS MT CONDENSED',0),
            self.nt('GILL','GILL SANS MT',0),
            self.nt('GILL','GILL SANS ULTRA BOLD CONDENSED',0),
            self.nt('GLOUCESTER', 'GLOUCESTER MT EXTRA CONDENSED', 0),
            self.nt('GOUDY', 'GOUDY STOUT', 0),
            self.nt('GOUDY', 'GOUDY OLD STYLE', 0),
            self.nt('HAETTENSCHWEILER','HAETTENSCHWEILER',0),
            self.nt('HIGH TOWER', 'HIGH TOWER TEXT', 0),
            self.nt('IMPACT','IMPACT',0),
            self.nt('LEELAWADEE','LEELAWADEE UI',0),
            self.nt('LEELAWADEE','LEELAWADEE UI SEMILIGHT',0),
            self.nt('LUCIDA', 'LUCIDA CONSOLE', 0),
            self.nt('LUCIDA', 'LUCIDA SANS TYPEWRITER', 0),
            self.nt('LUCIDA', 'LUCIDA SANS', 0),
            self.nt('MAIANDRA','MAIANDRA GD',0),
            self.nt('MODERN', 'MODERN NO. 20', 0),
            self.nt('MONOSPAC821','MONOSPAC821 BT',0),
            self.nt('NIAGARA', 'NIAGARA SOLID', 0),
            self.nt('NIAGARA', 'NIAGARA ENGRAVED', 0),
            self.nt('NIRMALA','NIRMALA UI',0),
            self.nt('NIRMALA','NIRMALA UI SEMILIGHT',0),
            # self.nt('OCRA','OCR A EXTENDED',0),
            # self.nt('OCRA','OCR-A II',0),
            # self.nt('OCRA','OCR-A-REGULAR',0),
            self.nt('ONYX', 'ONYX', 0),
            self.nt('PALATINO', 'PALATINO LINOTYPE', 0),
            self.nt('PERPETUA', 'PERPETUA', 0),
            self.nt('PERPETUA', 'PERPETUA TITLING MT', 0),
            self.nt('PLAYBILL', 'PLAYBILL', 0),
            self.nt('QUICKTYPE','QUICKTYPE II MONO',0),
            self.nt('QUICKTYPE','QUICKTYPE II CONDENSED',0),
            self.nt('QUICKTYPE','QUICKTYPE II',0),
            self.nt('ROCKWELL', 'ROCKWELL', 0),
            self.nt('ROMAN', 'ROMAND', 0),
            self.nt('ROMAN', 'ROMANT', 0),
            self.nt('SANSSERIF','SANSSERIF',0),
            self.nt('SEGOE','SEGOE UI',0),
            self.nt('SEGOE','SEGOE UI BLACK',0),
            self.nt('SEGOE','SEGOE PRINT',0),
            self.nt('SUPERFRENCH', 'SUPERFRENCH', 0),
            self.nt('SWIS721','SWIS721 LTCN BT',0),
            self.nt('SWIS721','SWIS721 BLKCN BT',0),
            self.nt('SWIS721','SWIS721 EX BT',0),
            self.nt('SWIS721','SWIS721 LT BT',0),
            self.nt('SWIS721','SWIS721 BT',0),
            self.nt('TAHOMA', 'TAHOMA', 0),
            self.nt('TECHNIC','TECHNIC',0),
            self.nt('TIMES', 'TIMES NEW ROMAN', 0),
            self.nt('TW','TW CEN MT',0),
            self.nt('VERDANA','VERDANA',0),
        ]

    def get_font_detail_config(self):
        return self.list_of_details

    def get_detail_config_for_font(self,font):
        return [f for f in self.list_of_details if f.font_name == font]

    def get_detail_config_for_font_variant(self,variant):
        for fdc in self.list_of_details:
            if fdc.font_variant == variant:
                return fdc
